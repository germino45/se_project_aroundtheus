!function(){"use strict";class e{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}_showInputError(e){const t=this._form.querySelector(`.${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`.${e.id}-error`);e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}_toggleInputState(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_checkValidity(e){return!e.validity.valid}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}toggleButtonState(){if(this._hasInvalidInput())return this._buttonEl.classList.add(this._inactiveButtonClass),void(this._buttonEl.disabled=!0);this._buttonEl.classList.remove(this._inactiveButtonClass),this._buttonEl.disabled=!1}_setEventListeners(){this._inputList=Array.from(this._form.querySelectorAll(this._inputSelector)),this._buttonEl=this._form.querySelector(this._submitButtonSelector),this.toggleButtonState(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._toggleInputState(e),this.toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}function t(e,t,r){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var s=r.call(e,"string");if("object"!=typeof s)return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}class r{constructor(e){t(this,"handleButtonclose",(()=>{this.close()})),t(this,"_handleEscapeClose",(e=>{"Escape"===e.key&&this.close()})),t(this,"_handleOverlayClick",(e=>{e.target.classList.contains("modal")&&this.close()})),this._popupElement=document.querySelector(e),this._closeButton=this._popupElement.querySelector(".modal__close-button")}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscapeClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscapeClose)}setEventListeners(){this._closeButton.addEventListener("click",this.handleButtonclose),this._popupElement.addEventListener("mousedown",this._handleOverlayClick)}}var s=class extends r{constructor(e,t){super(e),this._popupForm=this._popupElement.querySelector(".form"),this._inputs=this._popupForm.querySelectorAll(".form__input"),this._saveButton=this._popupForm.querySelector(".form__save-button"),this._handleFormSubmit=t}_getInputValues(){const e={};return this._inputs.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault();const t=this._getInputValues();this._handleFormSubmit(t),this.close()}))}close(){this._popupForm.reset(),super.close()}renderLoading(e,t){this._saveButton.textContent=e?"Saving...":t}};function i(e,t,r){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var s=r.call(e,"string");if("object"!=typeof s)return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}class n{constructor(e,t,r){i(this,"_handleLikeIcon",(()=>{this._likeButton.classList.toggle("card__like-button_activated")})),i(this,"_handleDeleteCard",(()=>{this._element.remove(),this._element=null})),this._name=e.name,this._link=e.link,this._handleImageClick=r,this._cardSelector=t}_setEventListeners(){this._likeButton.addEventListener("click",this._handleLikeIcon),this._deleteButton.addEventListener("click",this._handleDeleteCard),this._cardImageEl.addEventListener("click",(()=>this._handlePreviewPicture(this._name,this._link)))}_handlePreviewPicture(){this._handleImageClick(this._name,this._link)}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getView(){return this._element=this._getTemplate(),this._cardImageEl=this._element.querySelector(".card__image"),this._likeButton=this._element.querySelector(".card__like-button"),this._deleteButton=this._element.querySelector("#card-delete-button"),this._cardImage=this._element.querySelector(".card__image"),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._cardText=this._element.querySelector(".card__text"),this._cardText.textContent=this._name,this._setEventListeners(),this._element}}const o={formSelector:".form",inputSelector:".form__input",submitButtonSelector:".form__save-button",inactiveButtonClass:"form__save-button_disabled",inputErrorClass:"form__input_type_error",errorClass:"form__input-error"},a=(document.getElementById("header-logo"),document.getElementById("profile-image")),l=document.querySelector("#profile-edit-button"),c=document.querySelector("#profile-title-input"),h=document.querySelector("#profile-description-input"),d=document.querySelector("#profile-form"),u=(document.querySelector("#profile-close-button"),document.querySelector(".profile__title")),_=document.querySelector(".profile__description"),p=document.querySelector("#card-add-button"),m=document.querySelector("#add-form"),v={cardSection:".cards__list",cardTemplate:"#card-template",cardPreviewPopup:"#image-modal",profilePopup:"#profile-modal",addCardPopup:"#add-modal"};let f,g;const b=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error ${e.status}`)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{method:"GET",headers:this._headers}).then(this._checkResponse)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{method:"GET",headers:this._headers}).then(this._checkResponse)}getApiInfo(){return Promise.all([this.getUserInfo(),this.getInitialCards()])}editUserInfo(e,t){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then(this._checkResponse)}addNewCard(e,t){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:t})}).then(this._checkResponse)}deleteUserCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}addLikes(e){return fetch(`${this._baseUrl}/cards/likes/${e}`,{method:"PUT",headers:this._headers}).then(this._checkResponse)}deleteLikes(e){return fetch(`${this._baseUrl}/cards/likes/${e}`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}updateProfileAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._checkResponse)}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"524dc900-b8ae-4b17-aa07-465dc385d766","Content-type":"application/json"}}),E=new class{constructor(e,t,r){this._userName=e,this._userJob=t,this._avatar=r}getUserInfo(){return{name:this._userName.textContent,job:this._userJob.textContent}}getAvatar(){return{avatar:this._avatar.src}}setUserInfo(e,t){this._userName.textContent=e,this._userJob.textContent=t}setAvatar(e){this._avatar.src=e.avatar,this._avatar.alt=e.name}}(u,_,a),y=new s(v.profilePopup,(function(e){return y.renderLoading(!0),b.editUserInfo(e.title,e.description).then((()=>{E.setUserInfo(e.title,e.description),y.close()})).catch((e=>{console.log(e)})).finally((()=>{y.renderLoading(!1,"Save")}))})),S=new s(v.addCardPopup,((e,t)=>{S.renderLoading(!0),b.addNewCard(e,t).then((e=>{const t=k(e);addCardPopup.close(),g.addItem(t.renderCard())})).catch((e=>{console.log(e)})).finally((()=>{S.renderLoading(!1,"Create")}))})),C=new class extends r{constructor(e){super(e),this._image=this._popupElement.querySelector(".modal__image-picture"),this._caption=this._popupElement.querySelector(".modal__image-caption")}open(e,t){this._image.src=t,this._image.alt=e,this._caption.textContent=e,super.open()}}(v.cardPreviewPopup,I);function L(e){const t=k(e);g.addItem(t)}function k(e){return new n(e,v.cardTemplate,I).getView()}function I(e,t){C.open(e,t)}y.setEventListeners(),S.setEventListeners(),C.setEventListeners(),l.addEventListener("click",(()=>{!function(){const e=E.getUserInfo();c.value=e.name,h.value=e.job,q.toggleButtonState(),y.open()}()})),p.addEventListener("click",(()=>{S.open(),w.toggleButtonState()})),b.getApiInfo().then((e=>{let[t,r]=e;f=t._id,E.setUserInfo(t),E.setAvatar(t),new class{constructor(e,t){let{items:r,renderer:s}=e;this._items=r,this._renderer=s,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:r,renderer:L},v.cardSection).renderItems()})).catch((e=>{console.log(e)}));const q=new e(o,d),w=new e(o,m);q.enableValidation(),w.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,